---
- name: install dependencies
  become: yes
  package:
    name:
      - curl
      - findutils
      - sed
      - unzip
      - zip
    state: present

- name: create download directory
  file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ sdkman_download_dir }}'

- name: download SDKMAN
  get_url:
    url: '{{ sdkman_url }}'
    dest: '{{ sdkman_download_dir }}/{{ sdkman_redis_filename }}'
    sha256sum: '{{ sdkman_redis_sha256sum }}'
    force: no
    use_proxy: yes
    validate_certs: yes
    mode: 'u=rw,go=r'

- name: create the SDKMAN installation directories
  become: yes
  become_user: '{{ item[0] }}'
  file:
    state: directory
    mode: 'u=rwx,go=rx'
    dest: '{{ item[1] }}'
  with_nested:
    - '{{ sdkman_users }}'
    - - '{{ sdkman_install_dir }}'
      - '{{ sdkman_install_dir }}/bin'
      - '{{ sdkman_install_dir }}/src'
      - '{{ sdkman_install_dir }}/tmp'
      - '{{ sdkman_install_dir }}/tmp/stage'
      - '{{ sdkman_install_dir }}/ext'
      - '{{ sdkman_install_dir }}/etc'
      - '{{ sdkman_install_dir }}/var'
      - '{{ sdkman_install_dir }}/archives'
      - '{{ sdkman_install_dir }}/candidates'
      - '{{ sdkman_install_dir }}/contrib/completion/bash'
  loop_control:
    label: '{{ item[0] }}: {{ item[1] }}'

- name: download candidates
  uri:
    url: '{{ sdkman_candidates_url }}'
    return_content: yes
  register: candidates

- name: save candidates
  become: yes
  become_user: '{{ item }}'
  copy:
    content: "{{ candidates.content }}\n"
    dest: '{{ sdkman_install_dir }}/var/candidates'
    mode: 'u=rwx,go=rx'
  with_items: '{{ sdkman_users }}'

- name: save config
  become: yes
  become_user: '{{ item }}'
  template:
    src: 'config.j2'
    dest: '{{ sdkman_install_dir }}/etc/config'
    mode: 'u=rw,go=r'
  with_items: '{{ sdkman_users }}'

- name: extract SDKMAN
  become: yes
  unarchive:
    src: '{{ sdkman_download_dir }}/{{ sdkman_redis_filename }}'
    remote_src: yes
    dest: '{{ sdkman_install_dir | regex_replace("~", "~" + item) }}/tmp/stage'
    creates: '{{ sdkman_install_dir | regex_replace("~", "~" + item) }}/tmp/stage/sdkman-{{ sdkman_version }}/bin/sdkman-init.sh'
    owner: '{{ item }}'
    mode: 'o-w'
  with_items: '{{ sdkman_users }}'

- name: install SDKMAN
  become: yes
  become_user: '{{ item[0] }}'
  copy:
    src: '{{ sdkman_install_dir }}/tmp/stage/sdkman-{{ sdkman_version }}/{{ item[1] }}'
    remote_src: yes
    dest: '{{ sdkman_install_dir }}/{{ item[1] }}'
    owner: '{{ item[0] }}'
    mode: 'u=rwx,go=rx'
  with_nested:
    - '{{ sdkman_users }}'
    - - 'bin/sdkman-init.sh'
      - 'src/sdkman-version.sh'
      - 'src/sdkman-update.sh'
      - 'src/sdkman-selfupdate.sh'
      - 'src/sdkman-list.sh'
      - 'src/sdkman-use.sh'
      - 'src/sdkman-help.sh'
      - 'src/sdkman-main.sh'
      - 'src/sdkman-upgrade.sh'
      - 'src/sdkman-cache.sh'
      - 'src/sdkman-config.sh'
      - 'src/sdkman-utils.sh'
      - 'src/sdkman-flush.sh'
      - 'src/sdkman-current.sh'
      - 'src/sdkman-path-helpers.sh'
      - 'src/sdkman-availability.sh'
      - 'src/sdkman-uninstall.sh'
      - 'src/sdkman-broadcast.sh'
      - 'src/sdkman-env-helpers.sh'
      - 'src/sdkman-default.sh'
      - 'src/sdkman-offline.sh'
      - 'src/sdkman-install.sh'
      - 'src/sdkman-env.sh'
      - 'src/sdkman-home.sh'
      - 'contrib/completion/bash/sdk'
  loop_control:
    label: '{{ item[0] }}: {{ item[1] }}'

- name: save SDKMAN version
  become: yes
  become_user: '{{ item }}'
  copy:
    content: "{{ sdkman_version }}\n"
    dest: '{{ sdkman_install_dir }}/var/version'
    mode: 'u=rwx,go=rx'
  with_items: '{{ sdkman_users }}'

- name: install .sdkmanshrc
  become: yes
  become_user: '{{ item }}'
  template:
    src: 'sdkmanshrc.j2'
    dest: '~/.sdkmanshrc'
    mode: 'u=rw,go=r'
  with_items: '{{ sdkman_users }}'

- name: configure .bashrc
  become: yes
  become_user: '{{ item }}'
  lineinfile:
    path: '~/.bashrc'
    state: present
    regexp: '^source ~/.sdkmanshrc'
    line: 'source ~/.sdkmanshrc #THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!'
    create: yes
    mode: 'u=rw,go=r'
  with_items: '{{ sdkman_users }}'

- name: configure .zshrc
  become: yes
  become_user: '{{ item }}'
  lineinfile:
    path: '~/.zshrc'
    state: present
    regexp: '^source ~/.sdkmanshrc'
    line: 'source ~/.sdkmanshrc #THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!'
    create: yes
    mode: 'u=rw,go=r'
  with_items: '{{ sdkman_users }}'
